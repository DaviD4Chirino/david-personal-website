---
export const prerender = true;

import type { GetStaticPaths } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Blog from "../../components/pages/Blog";
import Navlinks from "../../components/organisms/Navlinks.astro";
import dayjs from "dayjs";

interface Props {
	page: PaginatedCollection<"posts">;
	allPosts: CollectionEntry<"posts">[];
}

export const getStaticPaths = (async ({ paginate }) => {
	let posts: CollectionEntry<"posts">[] = await getCollection("posts");

	// take out the drafts
	posts = posts.filter((post) => !post.data.draft);
	posts = posts.sort(
		(a: CollectionEntry<"posts">, b: CollectionEntry<"posts">) =>
			dayjs(a.data.date).unix() < dayjs(b.data.date).unix() ? 1 : -1
	);
	let paginated = paginate(posts, { pageSize: 10 });

	paginated = paginated.map((pag) => {
		return {
			params: { ...pag.params },
			props: { ...pag.props, allPosts: posts },
		};
	});

	return paginated;
}) satisfies GetStaticPaths;

const { page, allPosts } = Astro.props;
---

<Layout title="Blogs - David'Space">
	<main>
		<Navlinks class="flex absolute top-5 right-5 gap-1 z-10" />
		<Blog page={page} totalPosts={allPosts} client:load />
	</main>
</Layout>
